require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe ResidenciasController do

  before do
    @usuario = Factory.create :usuario
  end

  def mock_residencia(stubs={})
    @mock_residencia ||= mock_model(Residencia, stubs).as_null_object
  end

  describe "GET show" do
    it "assigns the requested residencia as @residencia" do
      Residencia.stub(:find).with("37") { mock_residencia }
      get :show, :id => "37", :usuario_id => @usuario.id
      assigns(:residencia).should be(mock_residencia)
    end
  end

  describe "GET new" do    
    it "assigns a new residencia as @residencia" do
      get :new, :usuario_id => @usuario.id
      response.should be_success
      
      assigns(:residencia).should_not be_nil
      assigns(:residencia).usuario == @usuario
    end
  end

  describe "GET edit" do
    it "assigns the requested residencia as @residencia" do
      Residencia.stub(:find).with("37") { mock_residencia }
      get :edit, :id => "37", :usuario_id => @usuario.id
      assigns(:residencia).should be(mock_residencia)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created residencia as @residencia" do
        Residencia.stub(:new).with({'these' => 'params'}) { mock_residencia(:save => true) }
        post :create, :residencia => {'these' => 'params'}, :usuario_id => @usuario.id
        assigns(:residencia).should be(mock_residencia)
      end

      it "redireciona para o show de usuario" do
        Residencia.stub(:new) { mock_residencia(:save => true) }
        post :create, :residencia => {}, :usuario_id => @usuario.id
        response.should redirect_to :controller => :usuarios, :action => :show, :usuario_id => @usuario.id
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved residencia as @residencia" do
        Residencia.stub(:new).with({'these' => 'params'}) { mock_residencia(:save => false) }
        post :create, :residencia => {'these' => 'params'}, :usuario_id => @usuario.id
        assigns(:residencia).should be(mock_residencia)
      end

      it "re-renders the 'new' template" do
        Residencia.stub(:new) { mock_residencia(:save => false) }
        post :create, :residencia => {}, :usuario_id => @usuario.id
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested residencia" do
        Residencia.stub(:find).with("37") { mock_residencia }
        mock_residencia.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :usuario_id => @usuario.id, :residencia => {'these' => 'params'}
      end

      it "assigns the requested residencia as @residencia" do
        Residencia.stub(:find) { mock_residencia(:update_attributes => true) }
        put :update, :id => "1", :usuario_id => @usuario.id
        assigns(:residencia).should be(mock_residencia)
      end

      it "redirects to the residencia" do
        residencia = Factory.create :residencia

        put :update, :id => residencia.id, :usuario_id => @usuario.id
        response.should redirect_to( :action => :show, :id => residencia.id, :usuario_id => @usuario.id )
      end
    end

    describe "with invalid params" do
      it "assigns the residencia as @residencia" do
        Residencia.stub(:find) { mock_residencia(:update_attributes => false) }
        put :update, :id => "1", :usuario_id => @usuario.id
        assigns(:residencia).should be(mock_residencia)
      end

      it "re-renders the 'edit' template" do
        Residencia.stub(:find) { mock_residencia(:update_attributes => false) }
        put :update, :id => "1", :usuario_id => @usuario.id
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested residencia" do
      Residencia.stub(:find).with("37") { mock_residencia }
      mock_residencia.should_receive(:destroy)
      delete :destroy, :id => "37", :usuario_id => @usuario.id
    end

    it "redirects to the residencias list" do
      Residencia.stub(:find) { mock_residencia }
      delete :destroy, :id => "1", :usuario_id => @usuario.id
      response.should redirect_to(usuario_residencias_url)
    end
  end
end
